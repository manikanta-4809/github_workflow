# .github/workflows/build-and-push.yml
name: Build and Push Docker Image

# Trigger this workflow on every push to the main branch
on:
  push:
    branches: [ "main" ]

# Define environment variables available to all jobs
env:
  # The name of the Docker image we are building
  # GHR_IO is the hostname for GitHub Container Registry
  # GITHUB_REPOSITORY is a built-in variable like 'your-username/your-repo-name'
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push to GHCR
    runs-on: ubuntu-latest

    # Grant permissions for the GITHUB_TOKEN to write packages
    permissions:
      contents: read
      packages: write

    steps:
      # 1. Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Log in to the GitHub Container Registry (GHCR)
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # github.actor is the username of the person who triggered the workflow
          username: ${{ github.actor }}
          # The GITHUB_TOKEN is a special secret provided by GitHub Actions
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3. Extract metadata (tags, labels) for the Docker image
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          # This creates tags like:
          # - 'latest' for the default branch
          # - Git SHA (e.g., 1234567)
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      # 4. Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .  # Build from the root of the repo
          push: true # Actually push the image
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
